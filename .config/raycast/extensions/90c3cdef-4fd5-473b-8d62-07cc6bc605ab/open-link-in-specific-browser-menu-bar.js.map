{
  "version": 3,
  "sources": ["../src/open-link-in-specific-browser-menu-bar.tsx", "../src/hooks/hooks.ts", "../src/utils/input-utils.ts", "../src/utils/common-utils.ts", "../src/utils/open-link-utils.ts", "../src/utils/constants.ts"],
  "sourcesContent": ["import { MenuBarExtra, Icon, openCommandPreferences, launchCommand, LaunchType } from \"@raycast/api\";\nimport { getItemInput, getOpenLinkApp } from \"./hooks/hooks\";\nimport React from \"react\";\nimport { ItemInput } from \"./utils/input-utils\";\nimport { OpenLinkApplication } from \"./types/types\";\nimport { actionOnApplicationItem, upBrowserRank } from \"./utils/open-link-utils\";\n\nexport default function OpenLinkInSpecificBrowser() {\n  const { itemInput } = getItemInput(0);\n  const { buildInApps, customApps, loading } = getOpenLinkApp(itemInput, 0);\n\n  return (\n    <MenuBarExtra\n      isLoading={loading}\n      tooltip={\"Open Link in Specific Browser\"}\n      icon={{\n        source: {\n          light: \"open-link-menu-bar-icon.png\",\n          dark: \"open-link-menu-bar-icon@dark.png\",\n        },\n      }}\n    >\n      {customApps.length !== 0 && (\n        <MenuBarExtra.Section title=\"Favorites\">\n          {customApps.map((browser) => (\n            <OpenLinkAppMenuBarItem\n              key={browser.path}\n              openLinkApplication={browser}\n              openLinkApplications={customApps}\n              itemInput={itemInput}\n              isCustom={true}\n            />\n          ))}\n        </MenuBarExtra.Section>\n      )}\n      {buildInApps.length !== 0 && (\n        <MenuBarExtra.Section title=\"Recommended\">\n          {buildInApps.map((browser) => (\n            <OpenLinkAppMenuBarItem\n              key={browser.path}\n              openLinkApplication={browser}\n              openLinkApplications={customApps}\n              itemInput={itemInput}\n              isCustom={false}\n            />\n          ))}\n        </MenuBarExtra.Section>\n      )}\n      <MenuBarExtra.Section>\n        <MenuBarExtra.Item\n          title={\"Add Favorite App\"}\n          icon={Icon.Star}\n          onAction={() => {\n            launchCommand({\n              name: \"open-link-in-specific-browser\",\n              type: LaunchType.UserInitiated,\n              context: { foo: \"bar\" },\n            }).then();\n          }}\n          shortcut={{ modifiers: [\"cmd\"], key: \"s\" }}\n        />\n      </MenuBarExtra.Section>\n      <MenuBarExtra.Section>\n        <MenuBarExtra.Item\n          title={\"Preferences\"}\n          icon={Icon.Gear}\n          onAction={() => {\n            openCommandPreferences().then();\n          }}\n          shortcut={{ modifiers: [\"cmd\"], key: \",\" }}\n        />\n      </MenuBarExtra.Section>\n    </MenuBarExtra>\n  );\n}\n\nfunction OpenLinkAppMenuBarItem(props: {\n  openLinkApplication: OpenLinkApplication;\n  openLinkApplications: OpenLinkApplication[];\n  itemInput: ItemInput;\n  isCustom: boolean;\n}) {\n  const { openLinkApplication, openLinkApplications, itemInput, isCustom } = props;\n  return (\n    <MenuBarExtra.Item\n      title={openLinkApplication.name}\n      icon={{ fileIcon: openLinkApplication.path }}\n      onAction={async () => {\n        isCustom && (await upBrowserRank(itemInput, openLinkApplication, openLinkApplications));\n        await actionOnApplicationItem(itemInput, openLinkApplication, () => null);\n      }}\n    />\n  );\n}\n", "import { useCallback, useEffect, useState } from \"react\";\nimport { fetchItemInput, ItemInput } from \"../utils/input-utils\";\nimport {\n  Alert,\n  confirmAlert,\n  getApplications,\n  getPreferenceValues,\n  Icon,\n  LocalStorage,\n  showToast,\n  Toast,\n} from \"@raycast/api\";\nimport { boardsSort } from \"../utils/open-link-utils\";\nimport { CacheKey, suggestApps } from \"../utils/constants\";\nimport { AppType, ItemType, OpenLinkApplication } from \"../types/types\";\nimport { Preferences } from \"../types/preferences\";\n\nexport const getItemInput = (refresh: number) => {\n  const [itemInput, setItemInput] = useState<ItemInput>(new ItemInput());\n\n  const fetchData = useCallback(async () => {\n    const inputItem = await fetchItemInput();\n    if (inputItem.type == ItemType.NULL) {\n      await showToast(Toast.Style.Failure, \"Nothing is detected from Selected or Clipboard!\");\n    } else {\n      setItemInput(inputItem);\n    }\n  }, [refresh]);\n\n  useEffect(() => {\n    void fetchData();\n  }, [fetchData]);\n\n  return { itemInput: itemInput };\n};\n\nexport const getOpenLinkApp = (itemInput: ItemInput, refresh: number) => {\n  const [buildInApps, setBuildInApps] = useState<OpenLinkApplication[]>([]);\n  const [customApps, setCustomApps] = useState<OpenLinkApplication[]>([]);\n  const [otherApps, setOtherApps] = useState<OpenLinkApplication[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const { showBrowser, showEmail, showOther } = getPreferenceValues<Preferences>();\n\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n\n    const allApplications = await getApplications();\n\n    //custom apps\n    const localBrowsers = await LocalStorage.getItem<string>(CacheKey.PREFERRED_APP);\n    const _customApps: OpenLinkApplication[] = typeof localBrowsers == \"string\" ? JSON.parse(localBrowsers) : [];\n    const _customAppPaths = _customApps.map((value) => value.path);\n    const _buildInPaths = suggestApps.map((value) => {\n      switch (value.type) {\n        case AppType.BROWSER: {\n          if (showBrowser) {\n            return value.path;\n          }\n          break;\n        }\n        case AppType.EMAIL_CLIENT: {\n          if (showEmail) {\n            return value.path;\n          }\n          break;\n        }\n        case AppType.OTHER: {\n          if (showOther) {\n            return value.path;\n          }\n          break;\n        }\n      }\n    });\n\n    const _buildInApps: OpenLinkApplication[] = [];\n    const _otherApps: OpenLinkApplication[] = [];\n\n    allApplications.forEach((value) => {\n      const suggestIncludeIndex = _buildInPaths.indexOf(value.path);\n      const customInclude = _customAppPaths.includes(value.path);\n      if (suggestIncludeIndex !== -1 && !customInclude) {\n        //build-in apps\n        _buildInApps.push({\n          bundleId: value.bundleId,\n          name: value.name,\n          path: value.path,\n          rankText: suggestApps[suggestIncludeIndex].rank,\n          rankURL: suggestApps[suggestIncludeIndex].rank,\n          rankEmail: suggestApps[suggestIncludeIndex].rank,\n        });\n      } else if (!customInclude) {\n        //other apps\n        _otherApps.push({\n          bundleId: value.bundleId,\n          name: value.name,\n          path: value.path,\n          rankText: 1,\n          rankURL: 1,\n          rankEmail: 1,\n        });\n      }\n    });\n\n    _buildInApps.sort((a, b) => a.rankURL - b.rankURL);\n    setCustomApps(boardsSort(_customApps, itemInput));\n    setBuildInApps(_buildInApps);\n    setOtherApps(_otherApps);\n    setLoading(false);\n  }, [itemInput, refresh]);\n\n  useEffect(() => {\n    void fetchData();\n  }, [fetchData]);\n\n  return { buildInApps: buildInApps, customApps: customApps, otherApps: otherApps, loading: loading };\n};\n\nexport const alertDialog = async (\n  icon: Icon,\n  title: string,\n  message: string,\n  confirmTitle: string,\n  confirmAction: () => void,\n  cancelAction?: () => void\n) => {\n  const options: Alert.Options = {\n    icon: icon,\n    title: title,\n    message: message,\n    primaryAction: {\n      title: confirmTitle,\n      onAction: confirmAction,\n    },\n    dismissAction: {\n      title: \"Cancel\",\n      onAction: () => cancelAction,\n    },\n  };\n  await confirmAlert(options);\n};\n", "import { getSelectedText, Clipboard } from \"@raycast/api\";\nimport { isEmailGroup, isEmpty, isMailTo, isUrl, mailtoBuilder, urlIPBuilder } from \"./common-utils\";\nimport { isIP } from \"net\";\nimport { ItemSource, ItemType } from \"../types/types\";\n\nexport class ItemInput {\n  content: string;\n  source: ItemSource;\n  type: ItemType;\n\n  constructor(content = \"\", source = ItemSource.NULL, type = ItemType.NULL) {\n    this.content = content;\n    this.source = source;\n    this.type = type;\n  }\n\n  setContent(content = \"\") {\n    this.content = content;\n    return this;\n  }\n  setSource(source: ItemSource = ItemSource.NULL) {\n    this.source = source;\n    return this;\n  }\n  setType() {\n    const trimText = this.content.trim();\n    if (isEmpty(trimText)) {\n      this.content = \"\";\n      this.source = ItemSource.NULL;\n      this.type = ItemType.NULL;\n    } else {\n      if (isMailTo(trimText)) {\n        this.content = mailtoBuilder(trimText.slice(7));\n        this.type = ItemType.EMAIL;\n      } else if (isEmailGroup(trimText)) {\n        this.content = mailtoBuilder(trimText);\n        this.type = ItemType.EMAIL;\n      } else if (isUrl(trimText)) {\n        let url;\n        if (isIP(trimText)) {\n          if (trimText == \"127.0.0.1\") {\n            url = \"http://www.\" + trimText;\n          } else {\n            url = urlIPBuilder(\"http://\", trimText);\n          }\n        } else {\n          url = /^https?:\\/\\//g.test(trimText) ? trimText : \"https://\" + trimText;\n        }\n        this.content = url;\n        this.type = ItemType.URL;\n      } else {\n        this.content = trimText;\n        this.type = ItemType.TEXT;\n      }\n    }\n    return this;\n  }\n}\n\nconst clipboard = async () => {\n  const content = await Clipboard.readText();\n  return typeof content == \"undefined\" ? \"\" : content;\n};\n\nexport const fetchItemInput = () => {\n  const itemInput = new ItemInput();\n  return getSelectedText()\n    .then(async (text) =>\n      !isEmpty(text)\n        ? itemInput.setContent(text.substring(0, 9999)).setSource(ItemSource.SELECTED).setType()\n        : itemInput\n            .setContent(String(await clipboard()))\n            .setSource(ItemSource.CLIPBOARD)\n            .setType()\n    )\n    .catch(async () =>\n      itemInput\n        .setContent(String(await clipboard()))\n        .setSource(ItemSource.CLIPBOARD)\n        .setType()\n    )\n    .then((item) =>\n      !isEmpty(item.content) ? itemInput : itemInput.setContent(\"\").setSource(ItemSource.NULL).setType()\n    )\n    .catch(() => itemInput.setContent(\"\").setSource(ItemSource.NULL).setType());\n};\n", "import { isIPv4 } from \"net\";\n\nexport const isEmpty = (string: string | null | undefined) => {\n  return !(string != null && String(string).length > 0);\n};\n\nexport function isMailTo(text: string): boolean {\n  return text.slice(0, 7) == \"mailto:\" && isEmailGroup(text.slice(7));\n}\n\nexport function isEmail(text: string): boolean {\n  const regex = /^\\w+((.\\w+)|(-\\w+))@[A-Za-z\\d]+((.|-)[A-Za-z\\d]+).[A-Za-z\\d]+$/;\n  return regex.test(text);\n}\n\nconst regex = /;|,/;\n\nexport function isEmailGroup(text: string): boolean {\n  if (isEmpty(text)) {\n    return false;\n  }\n  const emails = text.split(regex);\n  let _isEmailGroup = true;\n  emails.forEach((value, index) => {\n    _isEmailGroup = _isEmailGroup && ((isEmpty(value) && index == emails.length - 1) || isEmail(value));\n  });\n  return _isEmailGroup;\n}\n\nexport function mailtoBuilder(emailGroup: string): string {\n  const emails = emailGroup.split(regex);\n  let _emailGroup = \"\";\n  emails.map((value) => {\n    if (isEmail(value)) {\n      _emailGroup = _emailGroup + value + \";\";\n    }\n  });\n  return \"mailto:\" + _emailGroup;\n}\n\nexport function isUrl(text: string): boolean {\n  const regex = /^(http|https|ftp):\\/\\/((?:[\\w-]+\\.)+[a-z\\d]+)((?:\\/[^/?#]*)+)?(\\?[^#]+)?(#.+)?$/i;\n  return regex.test(text) || isIPv4(text);\n}\n\nexport const urlBuilder = (prefix: string, text: string) => {\n  return /^https?:\\/\\//g.test(text) ? text : `${prefix}${encodeURIComponent(text)}`;\n};\n\nexport const urlIPBuilder = (prefix: string, text: string) => {\n  return /^http:\\/\\//g.test(text) ? text : `${prefix}${text}`;\n};\n", "import { ItemInput } from \"./input-utils\";\nimport { urlBuilder } from \"./common-utils\";\nimport { getPreferenceValues, Icon, LocalStorage, open, popToRoot, showHUD } from \"@raycast/api\";\nimport { Preferences } from \"../types/preferences\";\nimport { CacheKey, SEARCH_ENGINE } from \"./constants\";\nimport { ItemType, OpenLinkApplication } from \"../types/types\";\nimport React from \"react\";\n\n//list item\nexport const searchBarPlaceholder = (inputText: ItemInput) => {\n  switch (inputText.type) {\n    case ItemType.TEXT:\n      return \"Search \u300C \" + searchContent(inputText) + \" \u300D in\";\n    case ItemType.URL:\n      return \"Open \u300C \" + searchContent(inputText) + \" \u300D in\";\n    case ItemType.EMAIL:\n      return \"Email \u300C \" + searchContent(inputText) + \" \u300D in\";\n    case ItemType.NULL:\n      return \"Detect link by pressing \u23CE\";\n  }\n};\n\nexport const searchContent = (inputText: ItemInput) => {\n  const suffix = inputText.content.length >= 40 ? \" ...\" : \"\";\n  return inputText.content.substring(0, 40) + suffix;\n};\n//list item\nexport const actionTitle = (inputText: ItemInput, applicationName: string) => {\n  switch (inputText.type) {\n    case ItemType.TEXT:\n      return \"Search in \" + applicationName;\n    case ItemType.URL:\n      return \"Open in \" + applicationName;\n    case ItemType.EMAIL:\n      return \"Email in \" + applicationName;\n    case ItemType.NULL:\n      return \"Detect Link\";\n  }\n};\n\nexport const actionIcon = (inputText: ItemInput) => {\n  switch (inputText.type) {\n    case ItemType.TEXT:\n      return Icon.MagnifyingGlass;\n    case ItemType.URL:\n      return Icon.Link;\n    case ItemType.EMAIL:\n      return Icon.Envelope;\n    case ItemType.NULL:\n      return Icon.TwoArrowsClockwise;\n  }\n};\n\nexport async function actionOnApplicationItem(\n  inputText: ItemInput,\n  app: OpenLinkApplication,\n  setRefresh: React.Dispatch<React.SetStateAction<number>>\n) {\n  if (inputText.type != ItemType.NULL) {\n    switch (inputText.type) {\n      case ItemType.URL:\n        await showHUD(\"Open link in \" + app.name);\n        break;\n      case ItemType.TEXT:\n        await showHUD(\"Search text by \" + getPreferenceValues<Preferences>().surfEngine + \" in \" + app.name);\n        break;\n      case ItemType.EMAIL:\n        await showHUD(\"Send e-mail in \" + app.name);\n        break;\n    }\n    await openSurfboard(searchEngineURLBuilder(inputText), app.path);\n    await popToRoot({ clearSearchBar: true });\n  } else {\n    setRefresh(Date.now());\n  }\n}\n\nexport async function openSurfboard(url: string, path: string) {\n  try {\n    if (path === \"/Applications/MenubarX.app\") {\n      await open(`menubarx://open/?xurl=${url}&xwidth=375&xheight=667&xbar=1`);\n    } else {\n      await open(url, path);\n    }\n  } catch (e) {\n    await showHUD(\"Error Input!\");\n  }\n}\n\nexport function searchEngineURLBuilder(itemInput: ItemInput): string {\n  switch (itemInput.type) {\n    case ItemType.EMAIL: {\n      return itemInput.content;\n    }\n    case ItemType.URL: {\n      return itemInput.content;\n    }\n    default: {\n      switch (getPreferenceValues<Preferences>().surfEngine) {\n        case \"Google\": {\n          return urlBuilder(SEARCH_ENGINE.google, itemInput.content);\n        }\n        case \"Bing\": {\n          return urlBuilder(SEARCH_ENGINE.bing, itemInput.content);\n        }\n        case \"Baidu\": {\n          return urlBuilder(SEARCH_ENGINE.baidu, itemInput.content);\n        }\n        case \"Brave\": {\n          return urlBuilder(SEARCH_ENGINE.brave, itemInput.content);\n        }\n        case \"DuckDuckGo\": {\n          return urlBuilder(SEARCH_ENGINE.duckduckgo, itemInput.content);\n        }\n      }\n      return urlBuilder(SEARCH_ENGINE.google, itemInput.content);\n    }\n  }\n}\n\n/**\n *\n * Rank increase: Percentage rank\n * The larger the rank, the smaller the increase\n * The smaller the rank, the larger the increase\n *\n */\nexport async function upBrowserRank(\n  itemInput: ItemInput,\n  browser: OpenLinkApplication,\n  browsers: OpenLinkApplication[]\n) {\n  browsers.map((val, index) => {\n    if (val.name == browser.name) {\n      switch (itemInput.type) {\n        case ItemType.TEXT: {\n          //Prevent excessive rank growth\n          const moreHighRank = browsers.filter((value) => {\n            return value.path !== browser.path && value.rankText >= browser.rankText;\n          });\n          if (moreHighRank.length == 0) {\n            break;\n          }\n          let allTextRank = 0;\n          browsers.forEach((value) => [(allTextRank = allTextRank + value.rankText)]);\n          browsers[index].rankText =\n            Math.floor((browsers[index].rankText + 1 - browsers[index].rankText / allTextRank) * 100) / 100;\n          break;\n        }\n        case ItemType.EMAIL: {\n          //Prevent excessive rank growth\n          const moreHighRank = browsers.filter((value) => {\n            return value.path !== browser.path && value.rankEmail >= browser.rankEmail;\n          });\n          if (moreHighRank.length == 0) {\n            break;\n          }\n          let allEmailRank = 0;\n          browsers.forEach((value) => [(allEmailRank = allEmailRank + value.rankEmail)]);\n          browsers[index].rankEmail =\n            Math.floor((browsers[index].rankEmail + 1 - browsers[index].rankEmail / allEmailRank) * 100) / 100;\n          break;\n        }\n        case ItemType.URL: {\n          //Prevent excessive rank growth\n          const moreHighRank = browsers.filter((value) => {\n            return value.path !== browser.path && value.rankURL >= browser.rankURL;\n          });\n          if (moreHighRank.length == 0) {\n            break;\n          }\n          let allURLRank = 0;\n          browsers.forEach((value) => [(allURLRank = allURLRank + value.rankURL)]);\n          browsers[index].rankURL =\n            Math.floor((browsers[index].rankURL + 1 - browsers[index].rankURL / allURLRank) * 100) / 100;\n          break;\n        }\n      }\n    }\n  });\n  boardsSort(browsers, itemInput);\n  await LocalStorage.setItem(CacheKey.PREFERRED_APP, JSON.stringify(browsers));\n}\n\nexport async function clearRank(surfApplication: OpenLinkApplication, surfApplications: OpenLinkApplication[]) {\n  surfApplications.map((value) => {\n    if (value.path == surfApplication.path) value.rankText = 1;\n    value.rankURL = 1;\n    value.rankEmail = 1;\n  });\n  surfApplications.sort(function (a, b) {\n    return b.name.toUpperCase() < a.name.toUpperCase() ? 1 : -1;\n  });\n  await LocalStorage.setItem(CacheKey.PREFERRED_APP, JSON.stringify(surfApplications));\n  return [...surfApplications];\n}\n\nexport async function clearAllRank(surfApplications: OpenLinkApplication[]) {\n  surfApplications.forEach((value) => {\n    value.rankText = 1;\n    value.rankURL = 1;\n    value.rankEmail = 1;\n  });\n  surfApplications.sort(function (a, b) {\n    return b.name.toUpperCase() < a.name.toUpperCase() ? 1 : -1;\n  });\n  await LocalStorage.setItem(CacheKey.PREFERRED_APP, JSON.stringify(surfApplications));\n  return [...surfApplications];\n}\n\nexport function boardsSort(browsers: OpenLinkApplication[], inputItem: ItemInput) {\n  switch (getPreferenceValues<Preferences>().sortBy) {\n    case \"Rank\": {\n      return browsers.sort(function (a, b) {\n        return sortByItemType(inputItem, a, b);\n      });\n    }\n    case \"Name+\": {\n      return browsers.sort(function (a, b) {\n        return b.name.toUpperCase() < a.name.toUpperCase() ? 1 : -1;\n      });\n    }\n    case \"Name-\": {\n      return browsers.sort(function (a, b) {\n        return b.name.toUpperCase() > a.name.toUpperCase() ? 1 : -1;\n      });\n    }\n    default: {\n      return browsers;\n    }\n  }\n}\n\nexport function sortByItemType(inputItem: ItemInput, a: OpenLinkApplication, b: OpenLinkApplication) {\n  switch (inputItem.type) {\n    case ItemType.EMAIL: {\n      return b.rankEmail - a.rankEmail;\n    }\n    case ItemType.URL: {\n      return (b.rankURL - a.rankURL) * 0.75 + (b.rankText - a.rankText) * 0.25;\n    }\n    case ItemType.TEXT: {\n      return (b.rankText - a.rankText) * 0.75 + (b.rankURL - a.rankURL) * 0.25;\n    }\n    case ItemType.NULL: {\n      return 0;\n    }\n  }\n}\n", "import { AppType } from \"../types/types\";\n\nexport const SEARCH_ENGINE = {\n  google: `https://google.com/search?q=`,\n  bing: `https://www.bing.com/search?q=`,\n  baidu: `https://www.baidu.com/s?wd=`,\n  brave: `https://search.brave.com/search?q=`,\n  duckduckgo: `https://duckduckgo.com/?q=`,\n};\n\nexport const suggestApps = [\n  { path: \"/Applications/Safari.app\", type: AppType.BROWSER, rank: 1 },\n  { path: \"/System/Volumes/Preboot/Cryptexes/App/System/Applications/Safari.app\", type: AppType.BROWSER, rank: 1 },\n  { path: \"/Applications/Google Chrome.app\", type: AppType.BROWSER, rank: 2 },\n  { path: \"/Applications/Microsoft Edge.app\", type: AppType.BROWSER, rank: 3 },\n  { path: \"/Applications/Firefox.app\", type: AppType.BROWSER, rank: 4 },\n  { path: \"/Applications/Opera.app\", type: AppType.BROWSER, rank: 5 },\n  { path: \"/Applications/Vivaldi.app\", type: AppType.BROWSER, rank: 6 },\n  { path: \"/Applications/Brave Browser.app\", type: AppType.BROWSER, rank: 7 },\n  { path: \"/Applications/Orion.app\", type: AppType.BROWSER, rank: 8 },\n  { path: \"/Applications/Arc.app\", type: AppType.BROWSER, rank: 9 },\n  { path: \"/Applications/DuckDuckGo.app\", type: AppType.BROWSER, rank: 10 },\n  { path: \"/Applications/MenubarX.app\", type: AppType.BROWSER, rank: 11 },\n  { path: \"/Applications/SigmaOS.app\", type: AppType.BROWSER, rank: 12 },\n  { path: \"/Applications/Slidepad.app\", type: AppType.BROWSER, rank: 13 },\n  { path: \"/Applications/Min.app\", type: AppType.BROWSER, rank: 14 },\n\n  { path: \"/System/Applications/Mail.app\", type: AppType.EMAIL_CLIENT, rank: 101 },\n  { path: \"/Applications/Spark.app\", type: AppType.EMAIL_CLIENT, rank: 102 },\n  { path: \"/Applications/Microsoft Outlook.app\", type: AppType.EMAIL_CLIENT, rank: 103 },\n  { path: \"/Applications/Airmail.app\", type: AppType.EMAIL_CLIENT, rank: 104 },\n  { path: \"/Applications/Mimestream.app\", type: AppType.EMAIL_CLIENT, rank: 105 },\n  { path: \"/Applications/Edison Mail.app\", type: AppType.EMAIL_CLIENT, rank: 106 },\n\n  { path: \"/Applications/Downie 4.app\", type: AppType.OTHER, rank: 201 },\n  { path: \"/Applications/IINA.app\", type: AppType.OTHER, rank: 202 },\n  { path: \"/Applications/Motrix.app\", type: AppType.OTHER, rank: 203 },\n  { path: \"/Applications/Thunder.app\", type: AppType.OTHER, rank: 204 },\n];\n\nexport enum CacheKey {\n  PREFERRED_APP = \"Preferred App\",\n}\n"],
  "mappings": "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",
  "names": ["open_link_in_specific_browser_menu_bar_exports", "__export", "OpenLinkInSpecificBrowser", "__toCommonJS", "import_api", "import_react", "import_api", "import_net", "isEmpty", "string", "isMailTo", "text", "isEmailGroup", "isEmail", "regex", "emails", "_isEmailGroup", "value", "index", "mailtoBuilder", "emailGroup", "_emailGroup", "isUrl", "urlBuilder", "prefix", "urlIPBuilder", "import_net", "ItemInput", "content", "source", "type", "trimText", "isEmpty", "isMailTo", "mailtoBuilder", "isEmailGroup", "isUrl", "url", "urlIPBuilder", "clipboard", "fetchItemInput", "itemInput", "text", "item", "import_api", "import_api", "SEARCH_ENGINE", "suggestApps", "actionOnApplicationItem", "inputText", "app", "setRefresh", "openSurfboard", "searchEngineURLBuilder", "url", "path", "itemInput", "urlBuilder", "SEARCH_ENGINE", "upBrowserRank", "browser", "browsers", "val", "index", "value", "allTextRank", "allEmailRank", "allURLRank", "boardsSort", "boardsSort", "browsers", "inputItem", "a", "b", "sortByItemType", "getItemInput", "refresh", "itemInput", "setItemInput", "ItemInput", "fetchData", "inputItem", "fetchItemInput", "getOpenLinkApp", "buildInApps", "setBuildInApps", "customApps", "setCustomApps", "otherApps", "setOtherApps", "loading", "setLoading", "showBrowser", "showEmail", "showOther", "allApplications", "localBrowsers", "_customApps", "_customAppPaths", "value", "_buildInPaths", "suggestApps", "_buildInApps", "_otherApps", "suggestIncludeIndex", "customInclude", "a", "b", "boardsSort", "import_jsx_runtime", "OpenLinkInSpecificBrowser", "itemInput", "getItemInput", "buildInApps", "customApps", "loading", "getOpenLinkApp", "browser", "OpenLinkAppMenuBarItem", "props", "openLinkApplication", "openLinkApplications", "isCustom", "upBrowserRank", "actionOnApplicationItem"]
}
